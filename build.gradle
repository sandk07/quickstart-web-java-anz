task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}


allprojects {
	apply from: "$rootDir/gradle/versioning.gradle"
}

//Read the environment specific configuration 
def env = project.hasProperty('env') ? project.getProperty('env') : 'test'
def configFile = file("$rootDir/gradle/config/envConfig.groovy")
def parsedConfig = new ConfigSlurper(env).parse(configFile.toURL())

//Assign the properties object to the global config object
ext.config = parsedConfig

/** Added by Sandeep to override the hostname and port - Start **/

// Check if host name and port are passed as parameters
def hostnameParam = project.hasProperty('hostname') ? project.getProperty('hostname') : config.server.hostname
def portPram = project.hasProperty('port') ? project.getProperty('port') : config.server.port

// Override the existing port details
config.server.hostname = hostnameParam
config.server.port = portPram

//println config.server.hostname
//println config.server.port

/** Added by Sandeep to override the hostname and port - End **/

buildscript {
    repositories {
      mavenLocal()
       /*maven {
        url jcenterLocalRepoPath
        credentials {
            username = repoUserName
            password = repoPassword
        }
    }
    mavenCentral() */
}

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.1.1' 

    }
}

def webProjects() {
    subprojects.findAll { subproject -> subproject.plugins.hasPlugin('war') }
}

gradle.projectsEvaluated {
    configure(webProjects()) {
        apply plugin: 'com.bmuschko.cargo'

        cargo {
            containerId = config.server.containerId
	    port = config.server.port.toInteger()
	
            remote {
                hostname = config.server.hostname
                username = config.server.username
                password = config.server.password
            }
        }
    }
    
}

